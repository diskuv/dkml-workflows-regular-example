include:
  - local: '.ci/dkml-compilers/gl/setup-dkml.gitlab-ci.yml'

linux:build:
  extends: .linux:setup-dkml
  script:
    - ci/build-test.sh

# Exclude macOS until you have a https://gitlab.com/gitlab-com/runner-saas-macos-access-requests/-/issues approved!
# macos:build:
#   extends: .macos:setup-dkml
#   script:
#     - ci/build-test.sh

win32:build:
  extends: .win32:setup-dkml
  script:
    - msys64\usr\bin\bash -lc "ci/build-test.sh"

release:
  stage: deploy
  image: alpine
  script:
    - apk add jq rsync curl

    # Make _release
    - ci/prepare-release.sh
    
    # Create public packages
    - |
      if [ -n "${CI_COMMIT_TAG:-}" ]; then
        PKGTAG=$(printf "%s" "${CI_COMMIT_TAG}" | sed 's/^v//')
      elif [ -n "${CI_COMMIT_BRANCH:-}" ]; then
        PKGTAG=$(printf "%s" "${CI_COMMIT_BRANCH}" | sed 's/^v//')
      else
        PKGTAG="${CI_COMMIT_SHORT_SHA}"
      fi
    - CI_PROJECT_PATH_URLENCODED=$(printf %s "${CI_PROJECT_PATH}" | jq -s -R -r @uri) # Must be url-encoded per https://docs.gitlab.com/ee/user/packages/generic_packages/
    - |
      GLAB_CURL_HEADER="JOB-TOKEN: ${CI_JOB_TOKEN}"
      find _release -mindepth 1 -maxdepth 1 -type d | while read -r dkml_target_abi; do
        dkml_target_abi=$(basename "${dkml_target_abi}")
        PACKAGE_REGISTRY_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_PATH_URLENCODED}/packages/generic/${dkml_target_abi}/${PKGTAG}"
        echo "${PACKAGE_REGISTRY_URL}"
        find "_release/${dkml_target_abi}" -mindepth 1 -maxdepth 1 -type f | while read -r file; do
          file=$(basename "${file}")
          curl --fail --header "${GLAB_CURL_HEADER}" --upload-file "_release/${dkml_target_abi}/${file}" "${PACKAGE_REGISTRY_URL}/${file}"
        done
      done

